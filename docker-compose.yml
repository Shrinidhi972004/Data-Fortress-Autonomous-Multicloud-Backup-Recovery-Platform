services:
  # MongoDB Database
  mongo:
    image: mongo:6.0
    container_name: file-upload-mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_DATABASE: fileupload
    volumes:
      - mongodb_data:/data/db
    ports:
      - "27018:27017"
    networks:
      - app-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    image: shrinidhiupadhyaya/datafortress-backend:latest
    container_name: datafortress-backend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=5000
      - MONGODB_URI=mongodb://mongo:27017/fileupload
      - UPLOAD_DIR=/app/uploads
      - MAX_FILE_SIZE=10485760
    volumes:
      - ./uploads:/app/uploads
      - backend_node_modules:/app/node_modules
    ports:
      - "5000:5000"
    depends_on:
      - mongo
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend (React)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production
      args:
        - REACT_APP_API_URL=http://localhost:5000
    image: shrinidhiupadhyaya/datafortress-frontend:latest
    container_name: datafortress-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backup Job (runs on demand)
  backup:
    image: shrinidhiupadhyaya/datafortress-backup:latest
    container_name: datafortress-backup
    restart: "no"
    environment:
      - MONGODB_URI=mongodb://mongo:27017/fileupload
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-}
      - AWS_BUCKET=datafortress-backups-shrinidhi
      - AWS_REGION=ap-south-1
    volumes:
      - ./uploads:/backup/uploads:ro
      - backup_data:/backup/mongodb
    depends_on:
      - mongo
    networks:
      - app-network
    profiles:
      - backup
    command: ["/app/scripts/container_backup.sh"]

volumes:
  mongodb_data:
    driver: local
  backend_node_modules:
    driver: local
  backup_data:
    driver: local

networks:
  app-network:
    driver: bridge
